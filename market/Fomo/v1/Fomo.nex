pragma nexscript >= 0.2.0;

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * Copyright (c) 2024 Ava's DAO
 * Released under the MIT License.
 *
 * Fomo (Fear of missing out) â€” is an auction contract designed to allow
 * those with "paper hands" to buy in early and those with "diamond hands"
 * to hold-out for better opportunities.
 *
 * Most notably, once a Circus has begun, it CANNOT be stopped.
 *
 * NOTES
 * --------------------
 * TBD
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * Version     : 01
 * Script Hash : 0x0000000000000000000000000000000000000000
 * Namespace   : FOMO01
 *
 * owner : Party whom will receive the payouts.
 * param : A very useful parameter.
 *
 * For more information, please visit the following resources:
 *   - https://docs.causes.cash/fomo
 *   - https://avasdao.org
 *
 */
contract Fomo(
    int poison,
    int curfew,
    int fear,
    bytes20 promoter,
    bytes20 admin,
) {
    /**
     * Capture
     *
     * Allows a Bidder to claim against the current asset Holder.
     *
     * @param owner
     * @param signature
     */
    function capture(sig signature) {
        /* Set dust value. */
        // int DUST_VALUE = 546;

        /* Verify parameter. */
        require(key == bytes(0) && value == 0);

        /* Verify transaction is signed by the owner. */
        require(checkSig(signature, owner));
    }

    /**
     * Add Poison Pill
     *
     * Allows the current Holder to add a "poison pill" amount
     * to the contract that is required to be paid (in addition)
     * to the last Bidding price. The final Holder can use the antidote
     * and redeem the full poison pill.
     *
     * NOTE: Poison pill is NOT refundable unless you are the
     *       FINAL token Holder.
     *
     * @param owner
     * @param signature
     */
    function poison(pubkey owner, sig signature) {
        /* Set dust value. */
        int DUST_VALUE = 546;

        /* Verify parameter. */
        require(param >= DUST_VALUE);

        // TODO Change (final) params to indicate NEW amount.

        /* Verify transaction is signed by the owner. */
        require(checkSig(signature, owner));
    }

    /**
     * Antidote
     *
     * Allows the current (final) Holder to redeem the full poison pill.
     *
     * @param owner
     * @param signature
     */
    function antidote(pubkey owner, sig signature) {
        /* Set dust value. */
        int DUST_VALUE = 546;

        /* Verify parameter. */
        require(param >= DUST_VALUE);

        /* Verify transaction is signed by the owner. */
        require(checkSig(signature, owner));
    }

    /**
     * Liberate
     *
     * Alllows the Bidder to free their asset new asset from
     * the contract's confines.
     *
     * @param owner
     * @param signature
     */
    function liberate(pubkey owner, sig signature) {
        /* Set dust value. */
        int DUST_VALUE = 546;

        /* Verify parameter. */
        require(param >= DUST_VALUE);

        /* Verify transaction is signed by the owner. */
        require(checkSig(signature, owner));
    }
}
