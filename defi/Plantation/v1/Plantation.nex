pragma nexscript >= 0.2.0;

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Copyright (c) 2023 Ava's DAO
 * Released under the MIT License.
 *
 * Plantation
 *
 * Creates a non-custodial container (ie. smart contract address), to be used
 * for securing one or more assets until a specific expiration time in the
 * future.
 *
 * Assets being held (ie. time-locked) in a farmhouse:
 *   1. cannot be transferred until AFTER the growing season (expiration) time.
 *   2. are 100% under the control of the farmhouse farmer.
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * Version     : 01
 * Script Hash : 0x0000000000000000000000000000000000000000
 * Namespace   : FARMH01
 *
 * farmhouseid : The script hash of the Farmhouse (template) bound to this Plantation.
 *
 * Seasonal Durations
 *   - 1 HOUR     1 hour         ~7 cycles
 *   - 1 DAY      1 day        ~169 cycles
 *   - 1 WEEK     7 days     ~1,181 cycles
 *   - 1 MONTH    30 days    ~5,063 cycles
 *   - 1 QUARTER  90 days   ~15,188 cycles
 *   - 1 YEAR     365 days  ~61,594 cycles
 * NOTE: Each season cycle lasts for 512 seconds; while there are
 *       exactly 168.75 cycles in a 24 hour day.
 * (source: https://prestwi.ch/bitcoin-time-locks/)
 *
 * For more information, please visit the following resources:
 *   - https://docs.nexa.exchange/create/farm
 *   - https://docs.nexa.exchange/trade/farming
 *   - https://avasdao.org
 *
 */
contract Plantation(
    bytes20 farmhouseid,
) {
    /**
     * Harvest
     *
     * TBD
     */
    function harvest() {
        // Extract the template hash from the lockingbytecode
        bytes templateHash = hash160(this.activeBytecode);

        /* Validate plantation. */
        // NOTE: This will always be the 1st input & output.
        require(
// FIXME Use `.visibleArguments`.
            tx.inputs[1].lockingBytecode == farmhouseid &&
            tx.outputs[1].lockingBytecode == farmhouseid
        )
    }
}
